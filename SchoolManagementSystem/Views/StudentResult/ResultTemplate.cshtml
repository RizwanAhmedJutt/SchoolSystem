@model SMSDataContract.Common.ResultSheetHelper
@{
    Layout = null;
}
@if (Model.AssignedCourses.Count > 0)
{
    <text>
        @using (@Html.BeginForm("ResultTemplate", "StudentResult", FormMethod.Post))
        {
            <div style="width:100%;">
                @Html.HiddenFor(x => x.PaperTerm)
                <table id="ResultSheet" class="table table-bordered table-striped table-responsive table-hover">
                    <tr class="action info">
                        <th>Subject</th>
                        <th width="200px;">Class Assessment 40 %</th>
                        <th>Paper 60 %</th>
                        <th width="200px">Grade</th>
                        <th>Remark</th>

                    </tr>
                    @for (int i = 0; i < Model.AssignedCourses.Count; i++)
                    {
                        <tr>
                            @Html.HiddenFor(x => x.AssignedCourses[i].AcadmicClassId)
                            @Html.HiddenFor(x => x.AssignedCourses[i].StudentId)
                            @Html.HiddenFor(x => x.AssignedCourses[i].CourseId)
                            @Html.HiddenFor(x => x.AssignedCourses[i].CourseName)
                            <td>
                                @Html.DisplayFor(x => x.AssignedCourses[i].CourseName)
                            </td>
                            <td>@Html.TextBoxFor(x => x.StudentResultSheet[i].ClassAssessmentPercentage, new { @class = "form-control numbersOnly", @Id = "txtClassAssessmentPercentage" + i })</td>
                            <td>
                                @Html.HiddenFor(x => x.StudentResultSheet[i].CreatedById)
                                @Html.HiddenFor(x => x.StudentResultSheet[i].CreatedDate)
                                @Html.HiddenFor(x => x.StudentResultSheet[i].StudentResultId)

                                @Html.TextBoxFor(x => x.StudentResultSheet[i].PaperPercentage, new { @class = "form-control numbersOnly", @Id = "txtPaperPercentage" + i })
                            </td>
                            <td>
                                @Html.DropDownListFor(x => x.StudentResultSheet[i].Grade,
                                    @ViewBag.Grades as List<SelectListItem>, "Select Grade", new { id = "ddlGrade", @class = "form-control" })
                            </td>
                            <td>@Html.TextBoxFor(x => x.StudentResultSheet[i].Remarks, new { @class = "form-control", @Id = "txtRemarks" + i })</td>

                        </tr>
                    }
                </table>
                <span class="subheader">Attendance</span>
                <table id="StdAttendance" class="table table-bordered table-striped table-responsive table-hover">
                    <tr class="action info">
                        <th>Working Day</th>
                        <th>Leaves</th>
                        <th>Absents</th>
                        <th>Percentage</th>

                    </tr>
                    <tr>
                        <td>
                            @Html.HiddenFor(x=>x.StudentAttendance.AcadmicClassId)
                            @Html.HiddenFor(x=>x.StudentAttendance.StudentId)
                            @Html.HiddenFor(x=>x.StudentAttendance.StudentAttendanceId)
                            @Html.TextBoxFor(x => x.StudentAttendance.WorkingDays, new { @class = "form-control numbersOnly" })
                        </td>
                        <td>@Html.TextBoxFor(x => x.StudentAttendance.Leaves, new { @class = "form-control numbersOnly" })</td>
                        <td>@Html.TextBoxFor(x => x.StudentAttendance.Absents, new { @class = "form-control numbersOnly" })</td>
                        <td>@Html.TextBoxFor(x => x.StudentAttendance.TotalPercentage, new { @class = "form-control numbersOnly", @readOnly="readOnly" })</td>

                    </tr>
                </table>
                <span class="subheader">Social And Personal Devlopement</span>
                <table id="stdSocialActivity" class="table table-bordered table-striped table-responsive table-hover">
                    <tr class="action info">
                        <th>Description</th>
                        <th>Grade</th>
                    </tr>
                    @for (int k = 0; k < Model.SrSocialAndPersonalSkill.Count; k++)
                    {
                        <text>
                            <tr>
                                <td>
                                    @Html.HiddenFor(x => x.SrSocialAndPersonalSkill[k].SocialSkillId)
                                    @Html.HiddenFor(x => x.SrSocialAndPersonalSkill[k].SocialDescriptionId)
                                    @Html.HiddenFor(x => x.SrSocialAndPersonalSkill[k].CreatedById)
                                    @Html.HiddenFor(x => x.SrSocialAndPersonalSkill[k].CreatedDate)
                                    @Html.DisplayFor(x => x.SrSocialAndPersonalSkill[k].Description)
                                </td>
                                <td>

                                    @Html.DropDownListFor(x => x.SrSocialAndPersonalSkill[k].Grad, new List<SelectListItem>()
                                        {
                                            new SelectListItem(){ Text= "A", Value = "A"},
                                            new SelectListItem(){ Text= "B", Value = "B"},
                                            new SelectListItem(){ Text= "C", Value = "C"},
                                            new SelectListItem(){ Text= "D", Value = "D"},
                                            new SelectListItem(){ Text= "F", Value = "F"}


                                        }, "Select Grade", new { id = "ddlGrade", @class = "form-control" })
                                </td>
                            </tr>
                        </text>
                    }
                </table>
                <span class="subheader">Work And Study Devlopement</span>
                <table id="stdSocialActivity" class="table table-bordered table-striped table-responsive table-hover">
                    <tr class="action info">
                        <th>Description</th>
                        <th>Grade</th>
                    </tr>
                    @for (int j = 0; j < Model.SrWorkAndStudySkill.Count; j++)
                    {
                        <text>
                            <tr>
                                <td>
                                    @Html.HiddenFor(x => x.SrWorkAndStudySkill[j].WorkSkillId)
                                    @Html.HiddenFor(x => x.SrWorkAndStudySkill[j].CreatedById)
                                    @Html.HiddenFor(x => x.SrWorkAndStudySkill[j].CreatedDate)
                                    @Html.HiddenFor(x => x.SrWorkAndStudySkill[j].StudyDescriptionId)
                                    @Html.DisplayFor(x => x.SrWorkAndStudySkill[j].Description)
                                </td>
                                <td>
                                    @Html.DropDownListFor(x => x.SrWorkAndStudySkill[j].Grade, new List<SelectListItem>()
                                        {
                                            new SelectListItem(){ Text= "A", Value = "A"},
                                            new SelectListItem(){ Text= "B", Value = "B"},
                                            new SelectListItem(){ Text= "C", Value = "C"},
                                            new SelectListItem(){ Text= "D", Value = "D"},
                                            new SelectListItem(){ Text= "F", Value = "F"}


                                        }, "Select Grade", new { id = "ddlGrade", @class = "form-control" })
                                </td>
                            </tr>
                        </text>
                    }
                </table>

            </div>
            <div class="col-md-offset-10 col-md-12">
                <input type="submit" value="Save" class="btn btn-primary" />

            </div>
        }
    </text>
}
<script type="text/javascript">
    $("#StudentAttendance_Absents").change(function () {
        debugger;
        var workingDays = $("#StudentAttendance_WorkingDays").val();
        var absents = $("#StudentAttendance_Absents").val();
        // since working days always greater than absents
        if (workingDays <= absents) {
            var presentDays = workingDays - absents;
            var totalPercentage = (presentDays / workingDays) * 100;
            $("#StudentAttendance_TotalPercentage").val(totalPercentage);
        }
        else {
            alert("Working Days Must be Greater Than Absents..");
        }


    });
</script>