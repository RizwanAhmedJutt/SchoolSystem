@model SMSDataContract.Accounts.DailyAssessmentType

@{

    Layout = null;
}


@using (Html.BeginForm("AddChangesAssessmentType", "StudentReport", FormMethod.Post))
{
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-body">
                    <div class="col-md-12 col-sm-12">
                        <div class="row well">
                            <div class="form-horizontal">
                                @if (Model.AssessmentTypeId == 0)
                                {
                                    <span class="HeadingStyle">Add Assessment Type </span>

                                }
                                else
                                {
                                    @Html.HiddenFor(x => x.AssessmentTypeId)
                                    @Html.HiddenFor(x => x.CreatedById)
                                    @Html.HiddenFor(x => x.CreateDate)
                                    <span class="HeadingStyle">Update Assessment Type</span>
                                }
                                <hr />

                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">

                                    @Html.ValidationSummary(true)

                                    <div class="form-group">
                                        <div class="col-md-5 control-label"><label>Assessment Belong To</label> </div>
                                        <div id="dvCategory" style="text-align: center; margin-top: -25px; margin-left:57%;">
                                            <span id="CategoryMsg" class="error" style="display:none;"></span>
                                        </div>
                                        <div class="col-md-7">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="glyphicon glyphicon-level-up"></i></span>
                                                @{Html.RenderPartial("../DropDownLists/DDLCategory");}
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">

                                        @Html.LabelFor(model => model.AssessmentName, new { @class = "control-label col-md-5" })
                                        <div id="dvCourse" style="text-align: center; margin-top: -25px; margin-left:57%;">
                                            <span id="RoomMsg" class="error" style="display:none;"></span>
                                        </div>
                                        <div class="col-md-5">

                                            @Html.EditorFor(model => model.AssessmentName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AssessmentName)
                                        </div>
                                    </div>
                                    <div id="criteria" class="form-group">

                                        @Html.LabelFor(model => model.AssessmentCriteria, new { @class = "control-label col-md-5" })
                                        <div id="dvCourse" style="text-align: center; margin-top: -25px; margin-left:57%;">
                                            <span id="AssessmentCriteriaMsg" class="error" style="display:none;"></span>
                                        </div>
                                        <div class="col-md-5">

                                            <span id="generalAssessment">  @Html.RadioButtonFor(model => model.AssessmentCriteria, "General") General </span>
                                            <span id="acadmicAssessment">  @Html.RadioButtonFor(model => model.AssessmentCriteria, "Acadmic") Acadmic </span>
                                            @Html.ValidationMessageFor(model => model.AssessmentCriteria)
                                        </div>
                                    </div>
                                    <div id="AssessmentFormats" class="form-group">
                                        @Html.LabelFor(model => model.AssessmentFormat, new { @class = "control-label col-md-5" })
                                        <div class="col-md-7">
                                            @Html.RadioButtonFor(x => x.AssessmentFormat, "true") Concequence
                                            @Html.RadioButtonFor(x => x.AssessmentFormat, "false") Reward
                                        </div>

                                    </div>

                                    <div class="row">
                                        <div class="form-group">
                                            <span class="col-md-3 col-md-offset-7">

                                                <button id="btnAddEdit" type="submit" class="btn btn-primary btn-success pull-right">
                                                    @if (Model.AssessmentTypeId == 0)
                                                    { <text>

                                                        Save
                                                    </text>
                                                    }
                                                    else
                                                    {
                                                        <text>

                                                            Update
                                                        </text>
                                                    }
                                                </button>

                                            </span>

                                            <button type="submit" id="btnClosemodel" class="btn btn-primary" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
                                                    }

<script type="text/javascript">
    //Default Set Criteria Hide
    // $("#criteria").hide();
    $("#AssessmentFormats").hide();
    $("#ddlAssessmentCategory").change(function (e) {
        debugger;
        // $("#criteria").hide();
        var checkCategory = $("#ddlAssessmentCategory option:selected").val();

        if (checkCategory != '') {

            var getSelectedCategoryText = $("#ddlAssessmentCategory option:selected").text();

            if (getSelectedCategoryText == "Student" || getSelectedCategoryText == "student") {

                //$("#criteria").show();
                $("#generalAssessment").show();

            }
            if (getSelectedCategoryText == "Teacher" || getSelectedCategoryText == "teacher") {
                //$("#criteria").show();
                $("#generalAssessment").hide();
            }
        }

    });
    $("#btnClosemodel").click(function (e) {
        $('#myModal').modal('hide');
        // $('#modal').modal('toggle');
        $("#AddEdithtml").empty();
        $("div").removeClass("modal-backdrop fade in");
        e.preventDefault();

    });
    $("#acadmicAssessment").click(function () {
        //confirm default AssessmentFormat is non-concequence
        $("#AssessmentFormat").prop("checked", false);
        $("#AssessmentFormats").show();
    });
    $("#generalAssessment").click(function () {
        //confirm  AssessmentFormat is non-concequence
        $("#AssessmentFormat").prop("checked", false);
        $("#AssessmentFormats").hide();

    });
    $("#btnAddEdit").click(function (e) {
        debugger;
        e.preventDefault();
        var getAssessmentCategory = $("#ddlAssessmentCategory").val();
        if (getAssessmentCategory == '') {
            $("#CategoryMsg").text("Please Select Assessment Category");
            $("#CategoryMsg").show();
        }
        var isCriteriaVisible = $("#criteria").is(":visible");
        var isGeneralAssessmentVisible = $("#generalAssessment").is(":visible");
        var getradiobuttValue = $("input[type=radio][name=AssessmentCriteria]:checked").val();
        // if General  Assessment is Visible that means assessment is selected for Student Reports
        // in this Case Acadmic & General Reports can be created
        if (isGeneralAssessmentVisible == true) {
            debugger;
          
            if (typeof getradiobuttValue === "undefined") {

                $("#AssessmentCriteriaMsg").text("Please Select Assessment Criteria.");
                $("#AssessmentCriteriaMsg").show();
                return;
            }
            else {
                $("#AssessmentCriteriaMsg").text("");
                $("#AssessmentCriteriaMsg").hide();
            }
        }
            // if General Assessment is not Visible then Assessment is selected for Teacher
            // in this case only Acadmic Report can be Created.
        else {
            debugger;
            if( getradiobuttValue !=="Acadmic")
            {
                $("#AssessmentCriteriaMsg").text("Please Select Assessment Criteria.");
                $("#AssessmentCriteriaMsg").show();
                return;
            }
            else {
                $("#AssessmentCriteriaMsg").text("");
                $("#AssessmentCriteriaMsg").hide();
            }
        }
        var getAssessment = $("#AssessmentName").val();
        if (getAssessment != "") {
            var model = { AssessmentName: $("#AssessmentName").val(), AssessmentCategoryId: $("#ddlAssessmentCategory").val() };
            $.get("/StudentReport/CheckAssessmentTypeExist", model)
              .success(function (response) {

                  if (response == "true") {
                      $("#RoomMsg").text("Assessment Name already Exist..");
                      $("#RoomMsg").show();

                  }
                  else {
                      $("#RoomMsg").text("");
                      $("#RoomMsg").hide();
                      $("form").submit();

                  }

              })
              .fail(function (e) {

                  alert("Can't Check AssessmentType Existance..")
              })

        }
        else {
            $("#RoomMsg").text("Enter Assessment Type");
            $("#RoomMsg").show();
        }

    });
    // For Update Mode
    if ('@Model.AssessmentTypeId' > 0) {
        //$("#criteria").show();
        if('@Model.AssessmentCriteria'=="Acadmic")
        {
            $("#AssessmentFormats").show();
        }
    }

</script>

