@model SMSDataContract.Accounts.ST_PreviousAcadmicDetail

@{
    ViewBag.Title = "PreviousAcadmicRecord";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-8 col-sm-8">
            <div class="row well">
                <div class="form-horizontal">
                    @Html.HiddenFor(model => model.PAcadmicId)
                    @Html.HiddenFor(model => model.StudentId)
                    @if (Model.PAcadmicId == 0)
                    {
                        <h2 class="text-center">Previous Acadmic Record</h2>

                    }
                    else
                    {
                        <h2 class="text-center">Update Previous Acadmic Record</h2>
                    }
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                 
                    <div class="form-group">
                        @Html.LabelFor(model => model.SchoolName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                                @Html.EditorFor(model => model.SchoolName, new { htmlAttributes = new { @class = "form-control", id = "SchoolName", placeholder = "School Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.SchoolName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-4 control-label">Class Name</label>
                        @*@Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-4" })*@
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-level-up"></i></span>
                                @*@Html.EditorFor(model => model.ClassId, new { htmlAttributes = new { @class = "form-control", id = "LeavingClass", placeholder = "Leaving Class" } })*@
                                @{Html.RenderPartial("../DropDownLists/DDLClass");}
                            </div>
                            @Html.ValidationMessageFor(model => model.AcadmicClassId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PreviousExamPassed, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-7">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.PreviousExamPassed)
                                @Html.ValidationMessageFor(model => model.PreviousExamPassed, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-star-empty"></i></span>
                                @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control", id = "Session", placeholder = "Session Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MarksObtained, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.EditorFor(model => model.MarksObtained, new { htmlAttributes = new { @class = "form-control", id = "MarksObtained", placeholder = "Marks Obtained" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.MarksObtained, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TotalMark, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-stop"></i></span>
                                @Html.EditorFor(model => model.TotalMark, new { htmlAttributes = new { @class = "form-control", id = "TotalMark", placeholder = "Total Mark" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.TotalMark, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control", id = "Grade", placeholder = "Grade" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MediumOfInstruction, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-phone-alt"></i></span>
                                @Html.EditorFor(model => model.MediumOfInstruction, new { htmlAttributes = new { @class = "form-control", id = "MediumOfInstruction", placeholder = "Medium Of Instruction" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.MediumOfInstruction, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <hr />
                    <div class="form-group">
                        <div class="col-md-12">
                            @if (Model.PAcadmicId == 0)
                            {
                                <input type="submit" value="Save Previous Acadmic Record >>" style="background-color:#fab625;color:white;" class="btn pull-right" />
                                <input type="button" value="<< Move Back" style="background-color:#353899;color:white;" class="btn pull-left" />
                            }
                            else
                            {
                                <input type="submit" value="Update Previous Acadmic Record >>" style="background-color:#fab625; color:white;" class="btn pull-right" />
                                <input type="button" value="<< Move Back" style="background-color:#353899;color:white;" class="btn pull-left" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
   </div>
}

              
