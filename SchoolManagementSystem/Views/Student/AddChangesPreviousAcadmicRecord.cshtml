@model SMSDataContract.Accounts.ST_PreviousAcadmicDetail

@{
    ViewBag.Title = "PreviousAcadmicRecord";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-8 col-sm-8">
            <ol class="breadcrumb">
                <li><a href="/Student/AddChangesStudent?id=@Model.StudentId">Student</a></li>
                <li><a href="/Student/AddChangesStudentAddress?studentId=@Model.StudentId">Student Address</a></li>
                <li><a href="/Student/AddChangesGuardianDetail?studentId=@Model.StudentId">Guardian Details</a></li>
                <li><a href="/Student/AddChangesGuardianContacts?studentId=@Model.StudentId&guardianId=@Model.GuardianId">Guardian Contacts</a></li>
                <li class="active">Previous Acadmic Record</li>
            </ol>
            <div class="row well">
                <div class="form-horizontal">
                    @Html.HiddenFor(model => model.PAcadmicId)
                    @Html.HiddenFor(model => model.StudentId)
                    @Html.HiddenFor(model => model.GuardianId)
                    @if (Model.PAcadmicId == 0)
                    {
                        <span class="HeadingStyle">Previous Acadmic Record</span>

                    }
                    else
                    {
                        <span class="HeadingStyle">Update Previous Acadmic Record</span>
                    }
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.SchoolName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
                                @Html.EditorFor(model => model.SchoolName, new { htmlAttributes = new { @class = "form-control", id = "SchoolName", placeholder = "School Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.SchoolName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-4 control-label">Class Name</label>
                        @*@Html.LabelFor(model => model.ClassId, htmlAttributes: new { @class = "control-label col-md-4" })*@
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-level-up"></i></span>
                                @*@Html.EditorFor(model => model.ClassId, new { htmlAttributes = new { @class = "form-control", id = "LeavingClass", placeholder = "Leaving Class" } })*@
                                @{Html.RenderPartial("../DropDownLists/DDLClass");}
                            </div>
                            @Html.ValidationMessageFor(model => model.AcadmicClassId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PreviousExamPassed, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4 col-md-offset-1" >
                            <div class="checkbox">
                                @Html.EditorFor(model => model.PreviousExamPassed)
                                @Html.ValidationMessageFor(model => model.PreviousExamPassed, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-star-empty"></i></span>
                                @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control", id = "Session", placeholder = "Session Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MarksObtained, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.EditorFor(model => model.MarksObtained, new { htmlAttributes = new { @class = "form-control", id = "MarksObtained", placeholder = "Marks Obtained" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.MarksObtained, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TotalMark, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-stop"></i></span>
                                @Html.EditorFor(model => model.TotalMark, new { htmlAttributes = new { @class = "form-control", id = "TotalMark", placeholder = "Total Mark" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.TotalMark, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control", id = "Grade", placeholder = "Grade" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MediumOfInstruction, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-phone-alt"></i></span>
                                @Html.EditorFor(model => model.MediumOfInstruction, new { htmlAttributes = new { @class = "form-control", id = "MediumOfInstruction", placeholder = "Medium Of Instruction" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.MediumOfInstruction, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <hr />
                    <div class="form-group">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-9">
                                    @if (Model.PAcadmicId == 0)
                                    {
                                        <input type="submit" value="Add" id="AddPreviousDetail" style="background-color:#fab625;color:white;" class="btn pull-right" />

                                    }
                                    else
                                    {
                                        <input type="submit" value="Update" id="UpdatePreviousDetail" style="background-color:#fab625; color:white;" class="btn pull-right" />

                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        {
            $(document).ready(function () {
                if(@Model.PAcadmicId>0)
                {
                    $('#AcadmicClassId option[value="@Model.AcadmicClassId"]').attr("selected",true);
                }
                else
                {
                    $('#AcadmicClassId option[value=""]').attr("selected",true);
                }
               
            });




        }


    </script>
}