@model SMSDataContract.Accounts.AdmissionGranted

@{
    ViewBag.Title = "AdmissionGranted";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-8 col-sm-8">
            <div class="row well">
                <div class="form-horizontal">
                   @Html.HiddenFor(model => model.StudentId)
                    @if (Model.AdmissionId == 0)
                    {
                        <h2 class="text-center">Guardian Details</h2>

                    }
                    else
                    {
                        <h2 class="text-center">Update Guardian Details</h2>
                    }
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.AssessmentResult, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-certificate"></i></span>
                                @Html.EditorFor(model => model.AssessmentResult, new { htmlAttributes = new { @class = "form-control", id = "AssessmentResult", placeholder = "Assessment Result" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.AssessmentResult, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-th-list"></i></span>
                                @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control", type="text" , id = "CategoryId", placeholder = "Category" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsGranted, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-offset-1 col-md-7">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsGranted)
                                @Html.ValidationMessageFor(model => model.IsGranted, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AdmissionGrantedForClass, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-leaf"></i></span>
                                @Html.EditorFor(model => model.AdmissionGrantedForClass, new { htmlAttributes = new { @class = "form-control", id = "AdmissionGrantedForClass", placeholder = "Admission Granted For Class" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.AdmissionGrantedForClass, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AdmissionGrantedDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                                @Html.EditorFor(model => model.AdmissionGrantedDate, new { htmlAttributes = new { @class = "form-control", type = "datetime", id = "AdmissionGrantedDate", placeholder = "2/27/2016 11:39:57 PM" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.AdmissionGrantedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-leaf"></i></span>
                                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", id = "Remarks", placeholder = "Remarks" })
                            </div>
                            
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-12">
                            @if (Model.AdmissionId == 0)
                            {
                                <input type="submit" value="Save Admission Detial >>" style="background-color:#fab625;color:white;" class="btn pull-right" />
                                <input type="button" value="<< Move Back" style="background-color:#353899;color:white;" class="btn pull-left" />
                            }
                            else
                            {
                                <input type="submit" value="Update Admission Detial >>" style="background-color:#fab625; color:white;" class="btn pull-right" />
                                <input type="button" value="<< Move Back" style="background-color:#353899;color:white;" class="btn pull-left" />
                            }
                        </div>
                    </div>
                </div>
             </div>
         </div>
    </div>
}

