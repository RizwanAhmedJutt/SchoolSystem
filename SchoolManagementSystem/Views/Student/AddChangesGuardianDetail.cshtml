@model SMSDataContract.Accounts.GuardianDetail

@{
    ViewBag.Title = "GardianDetail";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-8 col-sm-8">
            <ol class="breadcrumb">
                <li><a href="/Student/AddChangesStudent?id=@Model.StudentId">Student</a></li>
                <li><a href="/Student/AddChangesStudentAddress?studentId=@Model.StudentId">Student Address</a></li>
                <li class="active">Guardian Details</li>
            </ol>
            <div class="row well">
                <div class="form-horizontal">
                    @Html.HiddenFor(model => model.StudentId)
                    @Html.HiddenFor(model => model.StudentGuardianId)
                    @if (Model.StudentGuardianId == 0)
                    {
                        <span class="HeadingStyle">Add Guardian Details</span>

                    }
                    else
                    {
                        <span class="HeadingStyle">Update Guardian Details</span>
                    }
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", id = "StuFatherName", placeholder = "Father Name" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", id = "StuMotherName", placeholder = "Mother Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GuardianName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                @Html.EditorFor(model => model.GuardianName, new { htmlAttributes = new { @class = "form-control", id = "StuGuardianName", placeholder = "Guardian Name" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.GuardianName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MotherTongue, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-ice-lolly"></i></span>
                                @Html.EditorFor(model => model.MotherTongue, new { htmlAttributes = new { @class = "form-control", id = "GuardianMotherTongue", placeholder = "Mother Tongue" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.MotherTongue, "", new { @class = "text-danger" })
                        </div>
                    </div>s
                    <div class="form-group">
                        @Html.LabelFor(model => model.OccupationOfGuardian, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">

                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-registration-mark"></i></span>
                                @Html.EditorFor(model => model.OccupationOfGuardian, new { htmlAttributes = new { @class = "form-control", id = "OccupationOfGuardian", placeholder = "Occupation of Guardian" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.OccupationOfGuardian, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.RelationWithGuardian, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">

                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-registration-mark"></i></span>
                                @Html.EditorFor(model => model.RelationWithGuardian, new { htmlAttributes = new { @class = "form-control", id = "RelationWithGuardian", placeholder = "Relation With Guardian" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.RelationWithGuardian, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GuardianMontlyIncome, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-usd"></i></span>
                                @Html.EditorFor(model => model.GuardianMontlyIncome, new { htmlAttributes = new { @class = "form-control", id = "GuardianMontlyIncome", placeholder = "Guardian Montly Income" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.GuardianMontlyIncome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GuardianQualification, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-education"></i></span>
                                @Html.EditorFor(model => model.GuardianQualification, new { htmlAttributes = new { @class = "form-control", id = "GuardianQualification", placeholder = "Guardian Qualification" } })
                            </div>

                            @Html.ValidationMessageFor(model => model.GuardianQualification, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-9">
                                    @if (Model.StudentGuardianId == 0)
                                    {
                                        <input type="submit" value="Add" style="background-color:#fab625;color:white;" class="btn pull-right" />

                                    }
                                    else
                                    {
                                        <input type="submit" value="Update" style="background-color:#fab625; color:white;" class="btn pull-right" />

                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
}
